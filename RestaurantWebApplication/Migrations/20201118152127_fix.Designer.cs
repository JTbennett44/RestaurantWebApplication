// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantWebApplication.Models;

namespace RestaurantWebApplication.Migrations
{
    [DbContext(typeof(RestaurantManagementDBContext))]
    [Migration("20201118152127_fix")]
    partial class fix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantWebApplication.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("MenuId");

                    b.HasIndex("Category");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Sales", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SaleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuId")
                        .HasColumnName("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnName("TicketID")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("MenuId");

                    b.HasIndex("TicketId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StaffID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Tables", b =>
                {
                    b.Property<int>("TablesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnName("Number")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("WaitStaff")
                        .HasColumnType("int");

                    b.HasKey("TablesID");

                    b.HasIndex("WaitStaff");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TicketID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("StaffId")
                        .HasColumnName("StaffID")
                        .HasColumnType("int");

                    b.Property<int?>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("MenuId");

                    b.HasIndex("StaffId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Menu", b =>
                {
                    b.HasOne("RestaurantWebApplication.Models.Category", "CategoryNavigation")
                        .WithMany("Menu")
                        .HasForeignKey("Category")
                        .HasConstraintName("FK_Menu_Category")
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Sales", b =>
                {
                    b.HasOne("RestaurantWebApplication.Models.Menu", "Menu")
                        .WithMany("Sales")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_Sales_Menu")
                        .IsRequired();

                    b.HasOne("RestaurantWebApplication.Models.Ticket", "Ticket")
                        .WithMany("Sales")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK_Sales_Ticket")
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Tables", b =>
                {
                    b.HasOne("RestaurantWebApplication.Models.Staff", "WaitStaffNavigation")
                        .WithMany("Tables")
                        .HasForeignKey("WaitStaff")
                        .HasConstraintName("FK_Tables_Staff")
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantWebApplication.Models.Ticket", b =>
                {
                    b.HasOne("RestaurantWebApplication.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantWebApplication.Models.Staff", "Staff")
                        .WithMany("Ticket")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_Ticket_Staff")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
